{"version":3,"sources":["components/Menu.js","components/Formulario.js","components/Pokemon.js","App.js","serviceWorker.js","index.js","pokemonlogo.png"],"names":["Menu","_ref","logo","react_default","a","createElement","className","href","rel","src","alt","Formulario","datosPokemon","_useState","useState","pokemon","_useState2","Object","slicedToArray","busquedaPKMN","guardarBusquedaPKMN","onSubmit","e","preventDefault","type","id","name","onChange","objectSpread","defineProperty","target","value","toLowerCase","required","htmlFor","Pokemon","resultado","height","weight","types","sprites","front_default","back_default","toFixed","map","key","slot","App","pkmn","guardarPokemon","_useState3","_useState4","error","capturarError","_useState5","_useState6","guardarResultado","undefined","useEffect","url","concat","fetch","then","response","status","console","log","json","jsonPoke","consultarAPI","components_Pokemon","components_Menu","pokemonlogo","components_Formulario","datosPKMN","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.cd21c7d3.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Menu({logo}){\n    return(\n        <nav>\n            <div className=\"nav-wrapper\">\n                <a href=\"https://www.pokemon.com/us/\" rel=\"noopener\" className=\"brand-logo center\">\n                    <img src={logo} alt=\"logo-pokemon\"/>\n                </a>\n            </div>\n        </nav>\n    );\n}\n\nexport default Menu;","import React, {useState} from 'react';\n\nfunction Formulario({datosPokemon}) {\n\n\n    //State para formulario\n    // busquedaPKMN = state , guardarBusquedaPKMN = this.setState({})\n\n    const [ busquedaPKMN, guardarBusquedaPKMN ] = useState({\n        pokemon: ''\n    });\n\n    const handleChange = e => {\n        //Cambiar el state\n        guardarBusquedaPKMN({\n            ...busquedaPKMN,\n            [e.target.name] : e.target.value.toLowerCase()\n        });\n    }\n\n    const consultarPokemon = e => {\n        e.preventDefault();\n        \n        datosPokemon(busquedaPKMN);\n    }\n\n    // console.log(busquedaPKMN);\n\n    return(\n        /*onSubmit={consultarPokedex}*/\n        <form onSubmit={consultarPokemon}><br/>\n            <div className=\"input-field col s12\">\n                <input type=\"text\" id=\"pokemon\" name=\"pokemon\" onChange={handleChange} required/>\n                <label htmlFor=\"pokemon\">Pokémon</label>\n            </div>\n            <div className=\"input-field col s12\">\n                <button className=\"waves-effect waves-light btn-large red darken-1 white\" type=\"submit\">Consultar</button>\n            </div>\n        </form>\n\n    );\n}\n\nexport default Formulario","import React from 'react';\n\nfunction Pokemon({resultado}){\n\n    // extraer los valores del resultado del pokededex\n    // console.log(resultado);\n\n    const {id, name, height, weight, types, sprites} = resultado;\n    const hectogramo = 5.436; //valor para convertir los hectogramos del peso del pkmn a lbs\n    const decimetro = 10; // valor para convertir los decimetro de la altura del pkmn a metros\n\n    // si no existe ninguno de los campos siguientes se pausa la carga del componente\n    if(!id || !name || !height || !weight || !types || !sprites ) return null;\n    // console.log(resultado);\n\n    return(\n        <div className=\"card-panel col s12 m12 l12 xl12 center\">\n            <br/>\n            <img src={sprites.front_default} alt=\"sprite\"/>\n            <img src={sprites.back_default} alt=\"sprite_back\"/>\n            <p><b>Número:</b> {id}</p>\n            <p><b>Nombre:</b> {name}</p>\n            <p><b>Altura:</b> {(height / decimetro).toFixed(2)} m.</p>\n            <p><b>Peso:</b> {(weight / hectogramo).toFixed(2) } lbs.</p>\n            <p><b>Tipos: </b>\n            {\n                types.map( type => {\n                    return <span key={type.slot} className=\"chip blue darken-1 white-text\">{type.type.name}</span>\n                })\n            }\n            </p>\n\n        </div>\n    );\n}\n\nexport default Pokemon","import React, {useState, useEffect} from 'react';\nimport Menu from './components/Menu';\nimport Formulario from './components/Formulario';\nimport Pokemon from './components/Pokemon';\n\nimport pokemonlogo from './pokemonlogo.png';\n\nfunction App() {\n\n\n  // State\n  const [pokemon, guardarPokemon] = useState('');\n  const [error, capturarError] = useState(false);\n  const [resultado, guardarResultado] = useState({});\n  \n\n  //Resetear resultado si no se encuentra el pokémon\n  if (resultado === undefined) {\n    guardarResultado({});\n  }\n\n  useEffect(() => {\n\n     //prevenir ejecución de la consulta a la API al inicio\n    if(pokemon === '') return;\n\n    const consultarAPI =  () => {\n    \n\n      const url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`;\n  \n      // const respuesta = await fetch(url);\n      // const resultado = await respuesta.json();\n  \n      // if (respuesta.ok && respuesta.status === 200) {\n      //   console.log(resultado);\n      // } else {\n      //   console.log('no se encontró al pokemon');\n      // }\n  \n      // guardarResultado(resultado);\n      \n      fetch(url)\n      .then(response => { \n        if(response.status >= 200 && response.status < 300){\n          console.log(response.status);\n          return response.json(); \n        }else{\n\n          console.log(response.status);\n          capturarError(true);\n          // console.log('no se encontró el pokémon');\n        }\n      })\n      .then(jsonPoke => { \n  \n        guardarResultado(jsonPoke);\n        // console.log(jsonPoke);\n  \n      });\n  \n      // console.log(resultado);\n    }\n  \n    consultarAPI();\n  }, [pokemon]);\n\n\n  // console.log(resultado);\n\n  const datosPokemon = datosPKMN => {\n\n    guardarPokemon(datosPKMN.pokemon);\n    capturarError(false);\n  }\n\n  // Cargar componente de pokemon condicionalmente\n\n  let pkmn;\n\n  if(pokemon === ''){\n\n    pkmn = <h4>Busque un pokémon</h4>;\n\n  } else if (error){\n    pkmn = <h4>Pokémon no encontrado</h4>;\n    // capturarError('');\n  }\n  else{\n    pkmn = <Pokemon resultado={resultado}/>;\n  }\n\n  return (\n    <div className=\"App\">\n      <Menu logo={pokemonlogo}/>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12 m12 l6 xl6\">\n            <Formulario \n              datosPokemon = {datosPokemon}\n            />\n          </div>\n          <div className=\"col s12 m12 l6 xl6\">\n            {pkmn}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pokemonlogo.7802853e.png\";"],"sourceRoot":""}